Testing
- migrate (goto path test)

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d "{\"taskid\":\"tmigrate\", \"dataset\":[{\"field1\": \"1111-1\", \"field2\": 2500.55, \"field3\": 100, \"field4\": \"2024-12-17\", \"field5\": \"10:10:10\", \"field6\": \"2024-12-17 10:10:10\", \"field7\": \"A\"}]}"

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d "{\"taskid\":\"tmigrate\", \"dataset\":[{\"field1\": \"1111-1\", \"field2\": 2500.55, \"field3\": 100, \"field4\": \"2024-12-17\", \"field5\": \"10:10:10\", \"field6\": \"2024-12-17 10:10:10\", \"field7\": \"A\"}]}"

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_handler.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_mapper_simple.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_mapper_complex.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_xpath.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_xpath_complex.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_xpath_complex_mapper_struct.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple_call_api.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple_call_api_list.json
{"head":{"model":"api","method":"category.lists","errorcode":"0","errorflag":"N","errordesc":""},"body":[{"tablename":"tconstant","category":"tkappstype","resultset":{"rows":[{"typeid":"W","nameen":"Web","nameth":"Web","seqno":1},{"typeid":"M","nameen":"Mobile","nameth":"Mobile","seqno":2}]}}]}
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple_call_api_list_handler.json

mapping alias:
testing:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/fetch/context/test_data_array -d @test_simple_data_array.json

tasking:

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_handler.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_mapper_simple.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_mapper_complex.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_xpath.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_xpath_complex.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_xpath_complex_mapper_struct.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_api.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_api_list.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_api_list_handler.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_db.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_db_handler.json

tasking rest:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task/test_simple_dataset -d @test_simple_dataset.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task/test_simple_dataset_array -d @test_simple_dataset_array.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task/test_simple_data_array -d @test_simple_data_array.json

curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task/test_simple_data_array_list -d @test_simple_data_array_list.json


test import text:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_csv\", \"file\": \"./assets/tso.csv\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_quote\", \"file\": \"./assets/tso_quote.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_fix_length\", \"file\": \"./assets/tso_fix.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_tab\", \"file\": \"./assets/tso_tab.txt\"}"

test import text upload:  file must encoding utf-8
1. text file
curl -X POST http://localhost:8080/upload/migrate/text -F filename=@D:\exim\assets\tso.txt -F taskid=test_file_text
2. csv file 
curl -X POST http://localhost:8080/upload/migrate/text -F filename=@D:\exim\assets\tso.csv -F taskid=test_file_csv
3. text file with double quote
curl -X POST http://localhost:8080/upload/migrate/text -F filename=@D:\exim\assets\tso_quote.txt -F taskid=test_file_text_quote
4. text file fix length
curl -X POST http://localhost:8080/upload/migrate/text -F filename=@D:\exim\assets\tso_fix.txt -F taskid=test_file_text_fix_length
5. text file delimiter TAB
curl -X POST http://localhost:8080/upload/migrate/text -F filename=@D:\exim\assets\tso_tab.txt -F taskid=test_file_text_tab

test import json:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratejson/insert -d "{\"taskid\":\"test_file_json\", \"file\": \"./assets/tso_json.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratejson/insert -d "{\"taskid\":\"test_file_json_array\", \"file\": \"./assets/tso_json_array.txt\"}"

test import json upload:
1. json file
curl -X POST http://localhost:8080/upload/migrate/json -F filename=@D:\exim\assets\tso_json.txt -F taskid=test_file_json
2. json array file 
curl -X POST http://localhost:8080/upload/migrate/json -F filename=@D:\exim\assets\tso_json_array.txt -F taskid=test_file_json_array

test no import but return json dataset:
1. define model name = ""
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_no_save\", \"file\": \"./assets/tso.txt\" }"
2. define parameter stored = "false"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\", \"stored\": \"false\" }"

test import excel:
1. xlsx (using exceljs)
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrateexcel/insert -d "{\"taskid\":\"test_file_excel\", \"file\": \"./assets/tso.xlsx\" }"
2. xls not support
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrateexcel/insert -d "{\"taskid\":\"test_file_excel\", \"file\": \"./assets/tso.xls\" }"
3. xlsx (using xlsx)
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexlsx/insert -d "{\"taskid\":\"test_file_xlsx\", \"file\": \"./assets/tso.xlsx\" }"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexlsx/insert -d "{\"taskid\":\"test_file_xlsx\", \"file\": \"./assets/tso.xls\" }"

test import excel upload:
1. exceljs (not support .xls)
curl -X POST http://localhost:8080/upload/migrate/excel -F filename=@D:\exim\assets\tso.xlsx -F taskid=test_file_excel
2. xlsx
curl -X POST http://localhost:8080/upload/migrate/xlsx -F filename=@D:\exim\assets\tso.xlsx -F taskid=test_file_xlsx
curl -X POST http://localhost:8080/upload/migrate/xlsx -F filename=@D:\exim\assets\tso.xls -F taskid=test_file_xlsx

test import xml:
1. xml simple
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexml/insert -d "{\"taskid\":\"test_file_xml\", \"file\": \"./assets/tso.xml\" }"
2. xml with cdata
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexml/insert -d "{\"taskid\":\"test_file_xml\", \"file\": \"./assets/tso_cdata.xml\" }"
3. xml complex
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexml/insert -d "{\"taskid\":\"test_file_xml_complex\", \"file\": \"./assets/tso_data.xml\" }"

test import xml upload:
curl -X POST http://localhost:8080/upload/migrate/xml -F filename=@D:\exim\assets\tso.xml -F taskid=test_file_xml
curl -X POST http://localhost:8080/upload/migrate/xml -F filename=@D:\exim\assets\tso_data.xml -F taskid=test_file_xml_complex


test center api:
1. api/migratefile/file (file existing on server)
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_json\", \"file\": \"./assets/tso_json.txt\", \"type\":\"json\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_xlsx\", \"file\": \"./assets/tso.xlsx\" }"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_xml\", \"file\": \"./assets/tso.xml\" }"

2. upload/migrate/file (file come from client)
curl -X POST http://localhost:8080/upload/migrate/file -F filename=@D:\exim\assets\tso.txt -F taskid=test_file_text
curl -X POST http://localhost:8080/upload/migrate/file -F filename=@D:\exim\assets\tso_json.txt -F taskid=test_file_json -F type=json
curl -X POST http://localhost:8080/upload/migrate/file -F filename=@D:\exim\assets\tso.xml -F taskid=test_file_xml
curl -X POST http://localhost:8080/upload/migrate/file -F filename=@D:\exim\assets\tso.xlsx -F taskid=test_file_xlsx


test sync/async:
1. async
curl -X POST -H "Content-Type: application/json" -H "AuthToken: ?" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\", \"async\": \"true\"}"
2. sync
curl -X POST -H "Content-Type: application/json" -H "AuthToken: ?" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\", \"async\": \"false\"}"
or
curl -X POST -H "Content-Type: application/json" -H "AuthToken: ?" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text\", \"file\": \"./assets/tso.txt\"}"
3. migrate result/log
+ require processid from async response
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratelog/get -d "{\"processid\":\"423fef5b-735c-4c95-8f71-6a7979f59d8e\"}"
curl -X POST http://localhost:8080/api/migratelog/get -d "processid=423fef5b-735c-4c95-8f71-6a7979f59d8e"
+ require migrateid from async response
curl -X POST http://localhost:8080/api/migratelog/retrieve -d "migrateid=423fef5b-735c-4c95-8f71-6a7979f59d8e"


test error:
1. test normal error -> stop
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_error\", \"file\": \"./assets/tso_error.txt\"}"
2. test verify error false
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_error_verify\", \"file\": \"./assets/tso_error.txt\"}"
3. test abandon error false
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_text_error_abandon\", \"file\": \"./assets/tso_error.txt\"}"

test statement:
1. post statement
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_post_statement\", \"file\": \"./assets/tso.txt\"}"
2. post statement with parameters
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_post_statement_params\", \"file\": \"./assets/tso.txt\", \"message\": \"Testing\"}"
3. statement elements
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_statement_element\", \"file\": \"./assets/tso.txt\"}"


test download/report log:
1. using migrate id
curl -X POST http://localhost:8080/report/migrate/log -d "migrateid=f716bc6e-8ce4-4033-9ecb-113852c810c9" -o d:\log1.txt
curl -X POST http://localhost:8080/report/migrate/log/json -d "migrateid=f716bc6e-8ce4-4033-9ecb-113852c810c9" -o d:\log1.json
2. using process id
curl -X POST http://localhost:8080/report/migrate/log -d "processid=f716bc6e-8ce4-4033-9ecb-113852c810c9" -o d:\log2.txt
curl -X POST http://localhost:8080/report/migrate/log/json -d "processid=f716bc6e-8ce4-4033-9ecb-113852c810c9" -o d:\log2.json


test multi model:
1. simple data json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple_multi_model.json
2. simple file text
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model\", \"file\": \"./assets/tso.txt\"}"
3. get log
curl -X POST http://localhost:8080/api/migratelog/get -d "processid=1aa6dd2b-e611-4474-89cf-2f046bc8a346"
4. test error
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model\", \"file\": \"./assets/tso_error.txt\"}"

5. dominate connection (not seprated connection)
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model_dominate\", \"file\": \"./assets/tso.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model_dominate\", \"file\": \"./assets/tso.txt\", \"async\":\"true\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model_dominate\", \"file\": \"./assets/tso_error.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_multi_model_dominate\", \"file\": \"./assets/tso_error.txt\", \"async\":\"true\"}"


test example: 
1. for api/download file handler
curl http://localhost:8080/api/example/file -d "file=tso.txt"
curl http://localhost:8080/api/example/file -d "file=tso_json_array.txt&type=json"
curl -X POST http://localhost:8080/api/example/file?file=tso.txt

2. using example service
curl http://localhost:8080/report/example -d "file=tso.txt" -o d:\exim\download\tso.txt
curl http://localhost:8080/report/example -d "file=tso_json_array.txt&type=json" -o d:\exim\download\tso_json_array.txt

3. using static path
curl http://localhost:8080/assets/tso.csv -o d:\exim\download\tso.csv
curl http://localhost:8080/assets/tso.xml -o d:\exim\download\tso.xml


test import with download file:
1. using center api
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download\"}"
2. test auto naming
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download_naming\"}"
3. using migratedownlod/file
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratedownload/file -d "{\"taskid\":\"test_file_text_download\"}"

example response:
{"head":{"model":"api","method":"migratefile.file","errorcode":"0","errorflag":"N","errordesc":""},"body":{"taskid":"test_file_text_download_naming","processid":"84f99ed8-e9f8-4bfa-9d25-8b7b3b20ec2d","resultset":[{"migrateid":"db1fe634-3062-4f78-82a4-09c6e170d27d","processid":"84f99ed8-e9f8-4bfa-9d25-8b7b3b20ec2d","taskid":"test_file_text_download_naming","modelname":"tso","totalrecords":7,"errorrecords":0,"skiprecords":0,"records":7,"rows":[],"columns":null}]}}

test import with ftp file:
1. using center api
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_ftp\"}"
2. test auto naming
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_ftp_naming\"}"
3. using migrateftp/file
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrateftp/file -d "{\"taskid\":\"test_file_text_ftp\"}"

test import attach file from email:
1. using center api
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_attach\"}"
2. test auto naming
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_attach_naming\"}"
3. using migratemail/file
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratemail/file -d "{\"taskid\":\"test_file_text_attach\"}"

test import vary date:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_date\", \"file\": \"./assets/date.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d "{\"taskid\":\"test_file_date_comma\", \"file\": \"./assets/date_comma.txt\"}"

test reconcile file:
1. reconcile download file
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download_reconcile\"}"
2. error reconcile
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download_reconcile_error\"}"

test filter data:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_filter\", \"file\": \"./assets/tso.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_filter_range\", \"file\": \"./assets/tso.txt\"}"

test call db with parameter defined in sql:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_db_param.json

test call api with parameter defined in body:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/task -d @test_simple_call_api_param.json

test reconcile file specified by parameter:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download_reconcile\", \"reconcile\": \"http://localhost:8080/assets/tso_counter.txt\"}"
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d "{\"taskid\":\"test_file_text_download_reconcile\", \"reconcile\": \"http://localhost:8080/assets/tso_count.txt\"}"

test text file with base64:
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratetext/insert -d @test_simple_text_base64.json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d @test_simple_text_base64.json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d @test_simple_xlsx_base64.json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratexlsx/insert -d @test_simple_xlsx_base64.json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migratefile/file -d @test_xlsx_base64.json

test call api response xml
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/migrate/insert -d @test_simple_call_api_response_xml.json


setting up sftp server on windows:
1. add OpenSSH Server 
    - Go to Settings > System > Optional features and click on View features.
    - Locate “OpenSSH server” feature, select it, click Next, and then click Add.
2. create sftp user account
    - net localgroup sftpusers /add
    - net user [username] [password] /add /comment:"SFTP User Account" /home:"C:\SFTP\[username]"
    - net localgroup sftpusers [username] /add
3. test sftp [username]@localhost

---------------------------------------------------------------------------------------------------

test export:
1. test export text
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extract/collect -d "{\"taskid\":\"extract_simple_text\"}"

2. export with async
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extract/collect -d "{\"taskid\":\"extract_simple_text\", \"async\": true }"

3. request extract log by process id (in case of async=true)  
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractlog/get -d "{\"processid\":\"6278c4d6-6565-4393-bb0e-0f25c085a4aa\"}"
- request with stream too
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractlog/get -d "{\"processid\":\"6278c4d6-6565-4393-bb0e-0f25c085a4aa\",\"stream\":true}"

4. download extract data
- by process id
curl -X POST http://localhost:8080/export/extract/data -d "processid=6278c4d6-6565-4393-bb0e-0f25c085a4aa" -o d:\ex1.txt
- by migrate id
curl -X POST http://localhost:8080/export/extract/data -d "migrateid=1d058a63-03bf-4ebd-9a65-55fa86c89e35" -o d:\ex2.txt

5. download extract data and erase stream (this can force by setting system environment variable ALWAYS_ERASE_DATA_STREAM=true)
- by process id
curl -X POST http://localhost:8080/export/extract/data -d "processid=6278c4d6-6565-4393-bb0e-0f25c085a4aa&erase=true" -o d:\ex2.txt
- by migrate id
curl -X POST http://localhost:8080/export/extract/data -d "migrateid=1d058a63-03bf-4ebd-9a65-55fa86c89e35&erase=true" -o d:\ex2.txt

6. test download from export file
- by process id
curl -X POST http://localhost:8080/export/extract/data -d "processid=30bdb854-91cc-4960-9146-8b0499667486" -o d:\fi1.txt
- force erase too
curl -X POST http://localhost:8080/export/extract/data -d "processid=30bdb854-91cc-4960-9146-8b0499667486&erase=true" -o d:\fi1.txt
- by migrate id
curl -X POST http://localhost:8080/export/extract/data -d "migrateid=faab32f3-1801-4fc3-86d0-dbc5c897674b" -o d:\fi2.txt
- force erase too
curl -X POST http://localhost:8080/export/extract/data -d "migrateid=faab32f3-1801-4fc3-86d0-dbc5c897674b&erase=true" -o d:\fi2.txt

7. test direct export file
- export file csv
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extracttext/collect -d "{\"taskid\":\"extract_data_file_text\"}"
- export file with TAB delimiter
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extracttext/collect -d "{\"taskid\":\"extract_data_file_text_tab\"}"
- export file with quote
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extracttext/collect -d "{\"taskid\":\"extract_data_file_text_quote\"}"
- export file fix length
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfix/collect -d "{\"taskid\":\"extract_data_file_text_fix_length\"}"
- export file json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractjson/collect -d "{\"taskid\":\"extract_data_file_text\"}"
- export file xml
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractxml/collect -d "{\"taskid\":\"extract_data_file_text\"}"
- export file excel
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractexcel/collect -d "{\"taskid\":\"extract_data_file_excel\"}"
- export file pdf
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractpdf/collect -d "{\"taskid\":\"extract_data_file_pdf\"}"

8. test center export file (specified by parameter extract or default with model.settings.extract)
- export file csv
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_text\", \"extract\": \"text\"}"
- export file fix length
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_text_fix_length\"}"
- export file json
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_text\", \"extract\": \"json\"}"
- export file xml
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_text\", \"extract\": \"xml\"}"
- export file excel
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_excel\"}"
- export file pdf
curl -X POST -H "Content-Type: application/json" http://localhost:8080/api/extractfile/collect -d "{\"taskid\":\"extract_data_file_pdf\"}"

